@using CSStatsTracker.Entities.MatchStatsRelated

<div class="player-row" @onclick="ToggleDetails">
    <div class="player-basic">
        <span class="player-name">@Player.Nickname</span>
        <span class="player-kd">@($"{Player.Player_Stats.Kills}/{Player.Player_Stats.Deaths}")</span>
        <span class="player-adr">@Player.Player_Stats.ADR</span>
        <span class="player-mvp">@Player.Player_Stats.MVPs</span>
    </div>

    @if (showDetails)
    {
        <div class="player-details">
            @foreach (var prop in Player.Player_Stats.GetType().GetProperties())
            {
                var label = FormatLabel(prop.Name);
                var value = prop.GetValue(Player.Player_Stats)?.ToString();

                if (!string.IsNullOrWhiteSpace(value))
                {
                    <div class="detail-item">
                        <strong>@label:</strong> @value
                    </div>
                }
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public MatchStatsPlayer Player { get; set; } = default!;

    private bool showDetails = false;

    private void ToggleDetails()
    {
        showDetails = !showDetails;
    }

    private string FormatLabel(string propName)
    {
        if (propName.StartsWith("_"))
            propName = propName.Substring(1);

        // Convert PascalCase or _1v1Count to "1v1 Count"
        var formatted = System.Text.RegularExpressions.Regex
            .Replace(propName, "(\\B[A-Z])", " $1")
            .Replace("_", " ")
            .Replace("  ", " ")
            .Trim();

        return char.ToUpper(formatted[0]) + formatted[1..];
    }
}
