@using CSStatsTracker.Entities.MatchRelated
@using CSStatsTracker.Entities
@using CSStatsTracker.Services.LastMatch
@using CSStatsTracker.Entities.MatchStatsRelated
@using CSStatsTracker.Services.LastMatchStats
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject ILastMatchService LastMatchService
@inject ILastMatchStatsService LastMatchStatsService

<div class="modal-overlay" @onclick="OverlayClick">
    <div class="modal-content" @onclick:stopPropagation>
        <button class="modal-close-btn" @onclick="CloseModal">✖</button>

        @if (LMScoreboard is null)
        {
            <p>Indlæser scoreboard...</p>
        }
        else
        {
            <div class="cs-scoreboard">
                <div class="map-name">@LMScoreboard.Round_Stats.Map</div>

                <div class="teams-container">
                    @foreach (var team in LMScoreboard.Teams)
                    {
                        <div class="team">
                            <div class="team-header">
                                <span class="team-name">@team.Team_Stats.Team</span>
                                <span class="team-score">@team.Team_Stats.FinalScore</span>
                            </div>
                            <div class="players-list">
                                <div class="player-row header-row">
                                    <div class="player-basic">
                                        <span class="player-name">Navn</span>
                                        <span class="player-kd">K/D</span>
                                        <span class="player-adr">ADR</span>
                                        <span class="player-mvp">MVPs</span>
                                    </div>
                                </div>
                                @foreach (var player in team.Players)
                                {
                                    <CSStatsTracker.ChildComponents.PlayerRow Player="player" />
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public EventCallback<bool> OnClose { get; set; }

    private Player? mainPlayer;
    private MatchItem? lastMatch;
    private Round? LMScoreboard;

    protected override async Task OnInitializedAsync()
    {
        mainPlayer = await LocalStorage.GetItemAsync<Player>("MainPlayer");

        if (mainPlayer is not null)
        {
            lastMatch = await LastMatchService.GetLastMatchInfoAsync(mainPlayer.Player_Id);
        }

        if (lastMatch?.Match_Id is not null)
        {
            LMScoreboard = await LastMatchStatsService.GetLastMatchStatsInfoAsync(lastMatch.Match_Id);
        }
    }

    private async Task CloseModal()
    {
        await OnClose.InvokeAsync(false);
    }

    private async Task OverlayClick()
    {
        // Klik på overlay lukker modal
        await CloseModal();
    }
}
